[{"D:\\inz20\\athletic\\src\\index.tsx":"1","D:\\inz20\\athletic\\src\\reportWebVitals.ts":"2","D:\\inz20\\athletic\\src\\App.tsx":"3","D:\\inz20\\athletic\\src\\views\\DoMeasurement.tsx":"4","D:\\inz20\\athletic\\src\\views\\TablesMeasurement.tsx":"5","D:\\inz20\\athletic\\src\\store.tsx":"6","D:\\inz20\\athletic\\src\\state\\scoreTableReducer.ts":"7","D:\\inz20\\athletic\\src\\util\\Navbars.tsx":"8"},{"size":618,"mtime":1609371458923,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":570,"mtime":1609673824488,"results":"12","hashOfConfig":"10"},{"size":2277,"mtime":1609415618797,"results":"13","hashOfConfig":"10"},{"size":1527,"mtime":1609372874051,"results":"14","hashOfConfig":"10"},{"size":455,"mtime":1609072447275,"results":"15","hashOfConfig":"10"},{"size":857,"mtime":1609416114519,"results":"16","hashOfConfig":"10"},{"size":1452,"mtime":1609674050604,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"2e6un6",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\inz20\\athletic\\src\\index.tsx",["38","39"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nimport { Provider } from 'react-redux'\nimport { store } from './store'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["40","41"],"D:\\inz20\\athletic\\src\\reportWebVitals.ts",[],"D:\\inz20\\athletic\\src\\App.tsx",["42","43"],"import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport { Navbars } from './util/Navbars';\r\nimport { DoMeasurement, DoMeasurementConnected } from './views/DoMeasurement';\r\nimport { TablesMeasurement, TablesMeasurementConnected } from './views/TablesMeasurement';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  return (\r\n    <Provider store={store} >\r\n      <div>\r\n        <Navbars />\r\n        <DoMeasurementConnected />\r\n        <TablesMeasurementConnected />\r\n\r\n\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\inz20\\athletic\\src\\views\\DoMeasurement.tsx",[],"D:\\inz20\\athletic\\src\\views\\TablesMeasurement.tsx",["44"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addPlayerAction } from '../state/scoreTableReducer';\r\n\r\nexport interface PlayerResult {\r\n    name: string;\r\n    surname: string;\r\n    score: number;\r\n}\r\n\r\ninterface Props {\r\n    _scoreTable: Array<PlayerResult>;\r\n\r\n}\r\n\r\nexport const TablesMeasurement: React.FC<Props> = (props) => {\r\n\r\n    console.log('props._scoreTable');\r\n    console.log(props._scoreTable);\r\n\r\n\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">FirstName</th>\r\n                    <th scope=\"col\">LastName</th>\r\n                    <th scope=\"col\">Score</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props._scoreTable.map((player, index) => (\r\n                    <tr>\r\n                        <th scope=\"row\">{index + 1}</th>\r\n                        <td>{player.name}</td>\r\n                        <td>{player.surname}</td>\r\n                        <td>{player.score}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n\r\n        </table>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    console.log(state)\r\n    return {\r\n        _scoreTable: state.scoreTableReducer.players\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport const TablesMeasurementConnected = connect(mapStateToProps, mapDispatchToProps)(TablesMeasurement);\r\n\r\n\r\n\r\n","D:\\inz20\\athletic\\src\\store.tsx",[],"D:\\inz20\\athletic\\src\\state\\scoreTableReducer.ts",[],"D:\\inz20\\athletic\\src\\util\\Navbars.tsx",[],{"ruleId":"45","severity":1,"message":"46","line":9,"column":10,"nodeType":"47","messageId":"48","endLine":9,"endColumn":18},{"ruleId":"45","severity":1,"message":"49","line":10,"column":10,"nodeType":"47","messageId":"48","endLine":10,"endColumn":15},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"45","severity":1,"message":"54","line":5,"column":10,"nodeType":"47","messageId":"48","endLine":5,"endColumn":23},{"ruleId":"45","severity":1,"message":"55","line":6,"column":10,"nodeType":"47","messageId":"48","endLine":6,"endColumn":27},{"ruleId":"45","severity":1,"message":"56","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":25},"@typescript-eslint/no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"'DoMeasurement' is defined but never used.","'TablesMeasurement' is defined but never used.","'addPlayerAction' is defined but never used.","no-global-assign","no-unsafe-negation"]