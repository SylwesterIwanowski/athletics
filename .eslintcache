[{"D:\\inz20\\athletic\\src\\index.tsx":"1","D:\\inz20\\athletic\\src\\reportWebVitals.ts":"2","D:\\inz20\\athletic\\src\\App.tsx":"3","D:\\inz20\\athletic\\src\\views\\DoMeasurement.tsx":"4","D:\\inz20\\athletic\\src\\views\\TablesMeasurement.tsx":"5","D:\\inz20\\athletic\\src\\store.tsx":"6","D:\\inz20\\athletic\\src\\state\\scoreTableReducer.ts":"7","D:\\inz20\\athletic\\src\\util\\Navbars.tsx":"8","D:\\inz20\\athletic\\src\\views\\playerList\\PlayerList.tsx":"9","D:\\inz20\\athletic\\src\\views\\groupList\\GroupList.tsx":"10","D:\\inz20\\athletic\\src\\views\\testResults\\TestResults.tsx":"11","D:\\inz20\\athletic\\src\\views\\performTest\\comp\\PerformTest.tsx":"12","D:\\inz20\\athletic\\src\\views\\performTest\\model\\PerformTest.model.ts":"13","D:\\inz20\\athletic\\src\\views\\performTest\\comp\\SelectGroup.tsx":"14","D:\\inz20\\athletic\\src\\views\\performTest\\model\\ScoreTypeModel.ts":"15","D:\\inz20\\athletic\\src\\views\\performTest\\model\\SexModel.ts":"16","D:\\inz20\\athletic\\src\\views\\performTest\\comp\\SelectedPlayer.tsx":"17","D:\\inz20\\athletic\\src\\views\\performTest\\comp\\SelectPlayer.tsx":"18","D:\\inz20\\athletic\\src\\views\\performTest\\comp\\axiosInstance.ts":"19","D:\\inz20\\athletic\\src\\views\\performTest\\comp\\useSetFormikField.ts":"20","D:\\inz20\\athletic\\src\\views\\performTest\\comp\\SelectWrapper.tsx":"21"},{"size":618,"mtime":1609794744000,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1609794744000,"results":"24","hashOfConfig":"23"},{"size":1179,"mtime":1609794744000,"results":"25","hashOfConfig":"23"},{"size":2277,"mtime":1609415618797,"results":"26","hashOfConfig":"23"},{"size":1527,"mtime":1609372874051,"results":"27","hashOfConfig":"23"},{"size":436,"mtime":1609794744000,"results":"28","hashOfConfig":"23"},{"size":817,"mtime":1609794744000,"results":"29","hashOfConfig":"23"},{"size":1840,"mtime":1609794744000,"results":"30","hashOfConfig":"23"},{"size":141,"mtime":1609794744000,"results":"31","hashOfConfig":"23"},{"size":139,"mtime":1609794744000,"results":"32","hashOfConfig":"23"},{"size":145,"mtime":1609794744000,"results":"33","hashOfConfig":"23"},{"size":1496,"mtime":1609802198000,"results":"34","hashOfConfig":"23"},{"size":999,"mtime":1609801815000,"results":"35","hashOfConfig":"23"},{"size":1123,"mtime":1609802605000,"results":"36","hashOfConfig":"23"},{"size":71,"mtime":1609794744000,"results":"37","hashOfConfig":"23"},{"size":66,"mtime":1609794744000,"results":"38","hashOfConfig":"23"},{"size":393,"mtime":1609802074000,"results":"39","hashOfConfig":"23"},{"size":650,"mtime":1609802605000,"results":"40","hashOfConfig":"23"},{"size":84,"mtime":1609799555000,"results":"41","hashOfConfig":"23"},{"size":353,"mtime":1609798717000,"results":"42","hashOfConfig":"23"},{"size":1169,"mtime":1609802718000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"2e6un6",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"D:\\inz20\\athletic\\src\\index.tsx",["92","93"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nimport { Provider } from 'react-redux'\nimport { store } from './store'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["94","95"],"D:\\inz20\\athletic\\src\\reportWebVitals.ts",[],"D:\\inz20\\athletic\\src\\App.tsx",[],"D:\\inz20\\athletic\\src\\views\\DoMeasurement.tsx",[],["96","97"],"D:\\inz20\\athletic\\src\\views\\TablesMeasurement.tsx",["98"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addPlayerAction } from '../state/scoreTableReducer';\r\n\r\nexport interface PlayerResult {\r\n    name: string;\r\n    surname: string;\r\n    score: number;\r\n}\r\n\r\ninterface Props {\r\n    _scoreTable: Array<PlayerResult>;\r\n\r\n}\r\n\r\nexport const TablesMeasurement: React.FC<Props> = (props) => {\r\n\r\n    console.log('props._scoreTable');\r\n    console.log(props._scoreTable);\r\n\r\n\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">FirstName</th>\r\n                    <th scope=\"col\">LastName</th>\r\n                    <th scope=\"col\">Score</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props._scoreTable.map((player, index) => (\r\n                    <tr>\r\n                        <th scope=\"row\">{index + 1}</th>\r\n                        <td>{player.name}</td>\r\n                        <td>{player.surname}</td>\r\n                        <td>{player.score}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n\r\n        </table>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    console.log(state)\r\n    return {\r\n        _scoreTable: state.scoreTableReducer.players\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport const TablesMeasurementConnected = connect(mapStateToProps, mapDispatchToProps)(TablesMeasurement);\r\n\r\n\r\n\r\n","D:\\inz20\\athletic\\src\\store.tsx",[],"D:\\inz20\\athletic\\src\\state\\scoreTableReducer.ts",[],"D:\\inz20\\athletic\\src\\util\\Navbars.tsx",[],"D:\\inz20\\athletic\\src\\views\\playerList\\PlayerList.tsx",[],"D:\\inz20\\athletic\\src\\views\\groupList\\GroupList.tsx",[],"D:\\inz20\\athletic\\src\\views\\testResults\\TestResults.tsx",[],"D:\\inz20\\athletic\\src\\views\\performTest\\comp\\PerformTest.tsx",["99","100"],"D:\\inz20\\athletic\\src\\views\\performTest\\model\\PerformTest.model.ts",[],"D:\\inz20\\athletic\\src\\views\\performTest\\comp\\SelectGroup.tsx",[],"D:\\inz20\\athletic\\src\\views\\performTest\\model\\ScoreTypeModel.ts",[],"D:\\inz20\\athletic\\src\\views\\performTest\\model\\SexModel.ts",[],"D:\\inz20\\athletic\\src\\views\\performTest\\comp\\SelectedPlayer.tsx",["101"],"D:\\inz20\\athletic\\src\\views\\performTest\\comp\\SelectPlayer.tsx",[],"D:\\inz20\\athletic\\src\\views\\performTest\\comp\\axiosInstance.ts",[],"D:\\inz20\\athletic\\src\\views\\performTest\\comp\\useSetFormikField.ts",[],"D:\\inz20\\athletic\\src\\views\\performTest\\comp\\SelectWrapper.tsx",["102"],"import React, {useState} from 'react';\nimport Select from \"react-select\";\nimport {useFormikContext} from \"formik\";\nimport {PerformTestModel} from \"../model/PerformTest.model\";\nimport _ from 'lodash';\nimport {useSetFormikField} from \"./useSetFormikField\";\n\ninterface Props<T> {\n    name: string;\n    getLabel: (option: T) => string;\n    options: Array<T>;\n    onChange?: (option: T | null | undefined) => void;\n}\n\nexport const SelectWrapper = <T extends object>(props: Props<T>): React.ReactElement<Props<T>> => {\n    const {\n        name,\n        getLabel,\n        options,\n        onChange,\n    } = props;\n\n    const { values } = useFormikContext<PerformTestModel>();\n    const setValue = useSetFormikField<T>(name);\n\n    const value = _.get(values, name) as T;\n\n    const handleChange = (val: T | null | undefined) => {\n        setValue(val);\n        if (onChange) {\n            onChange(val);\n        }\n    }\n\n\n    return (\n        <Select\n            options={options}\n            getOptionValue={getLabel}\n            formatOptionLabel={getLabel}\n            value={value}\n            onChange={handleChange}\n            backspaceRemovesValue\n        />\n    );\n};\n",["103","104"],{"ruleId":"105","severity":1,"message":"106","line":9,"column":10,"nodeType":"107","messageId":"108","endLine":9,"endColumn":18},{"ruleId":"105","severity":1,"message":"109","line":10,"column":10,"nodeType":"107","messageId":"108","endLine":10,"endColumn":15},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"105","severity":1,"message":"116","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":25},{"ruleId":"105","severity":1,"message":"117","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":23},{"ruleId":"105","severity":1,"message":"118","line":15,"column":20,"nodeType":"107","messageId":"108","endLine":15,"endColumn":29},{"ruleId":"105","severity":1,"message":"119","line":2,"column":9,"nodeType":"107","messageId":"108","endLine":2,"endColumn":26},{"ruleId":"105","severity":1,"message":"120","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":24},{"ruleId":"110","replacedBy":"121"},{"ruleId":"112","replacedBy":"122"},"@typescript-eslint/no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],"'addPlayerAction' is defined but never used.","'SelectWrapper' is defined but never used.","'setGroups' is assigned a value but never used.","'useSetFormikField' is defined but never used.","'useState' is defined but never used.",["123"],["124"],"no-global-assign","no-unsafe-negation"]